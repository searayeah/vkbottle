name: "Install poetry and dependencies"
description: "Action to install poetry and dependencies"
inputs:
  os:
    description: "Operating system"
    required: true
    default: "ubuntu-latest"
  python-version:
    description: "Python version"
    required: true
    default: "latest"
  poetry_home:
    description: "Path to poetry installation"
    required: false
    default: "~/poetry"
  poetry_virtualenvs_in_project:
    description: "Whether to create virtualenvs in the project directory"
    required: false
    default: "true"

runs:
  using: "composite"
  steps:
    - name: Export poetry config
      run: |
        echo POETRY_HOME="${{ inputs.poetry_home }}" >> $GITHUB_ENV
        echo POETRY_VIRTUALENVS_IN_PROJECT="${{ inputs.poetry_virtualenvs_in_project }}" >> $GITHUB_ENV
      shell: bash
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: Load cached venv
      id: cached-venv
      uses: actions/cache@v3
      with:
        key: venv-${{ inputs.python-version }}-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
        path: .venv

    - name: Load cached poetry installation
      id: cached-poetry
      uses: actions/cache@v3
      with:
        key: poetry-${{ inputs.python-version }}-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
        path: ${{ inputs.poetry_home }}

    - name: Install poetry
      if: steps.cached-poetry.outputs.cache-hit != 'true'
      run: curl https://install.python-poetry.org | python -
      shell: bash

    - name: Add poetry binary to PATH
      run: echo "${{ inputs.poetry_home }}/bin" >> $GITHUB_PATH
      shell: bash

    - name: Install dependencies
      if: steps.cached-venv.outputs.cache-hit != 'true'
      run: poetry install --with dev
      shell: bash
