repos:
  # Use pre-commit repo, v3.2.0
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: "v3.4.0"
    hooks:
      # Check for files that contain merge conflict strings.
      - id: check-merge-conflict
        stages: [ commit, push ]
      # Simply check whether files parse as valid python.
      - id: check-ast
        stages: [ commit ]

    # Use locally installed hooks
  - repo: local
    hooks:
      - id: autoflake
        name: autoflake
        entry: bash -c 'make autoflake_fix filename="$*"' --
        language: system
        types: [ python ]
        stages: [ commit ]

      - id: black
        name: black
        entry: poetry run black
        language: system
        types: [ python ]
        stages: [ commit ]
        # Black should use the config from the pyproject.toml file

      - id: isort
        name: isort
        entry: poetry run isort --filter-files
        language: system
        types: [ python ]
        stages: [ commit ]
        # Isort should use the config from the pyproject.toml file

      - id: mypy
        name: mypy check
        entry: poetry run mypy vkbottle
        language: system
        pass_filenames: false
        stages: [ commit ]

      - id: pytest
        name: pytest
        entry: poetry run pytest vkbottle
        language: system
        always_run: false
        pass_filenames: false
        stages: [ push ]

      - id: flakeheaven
        name: flakeheaven check
        entry: poetry run flakeheaven lint
        language: system
        types: [ python ]
        stages: [ push ]
